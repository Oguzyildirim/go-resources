// Code generated by protoc-gen-go. DO NOT EDIT.
// source: todo-service.proto

package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 请求数据以创建新的待办事项任务
type CreateRequest struct {
	// API版本控制：这是明确指定版本的最佳实践
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// 要添加的任务实体
	ToDo                 *ToDo    `protobuf:"bytes,2,opt,name=toDo,proto3" json:"toDo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_todo_service_a2620155fbb59383, []int{0}
}
func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (dst *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(dst, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateRequest) GetToDo() *ToDo {
	if m != nil {
		return m.ToDo
	}
	return nil
}

// 我们要做的是Task
type ToDo struct {
	// 待办事项任务的唯一整数标识符
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 任务的标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 待办事项任务的详细说明
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// 提醒待办任务的日期和时间
	Reminder             *timestamp.Timestamp `protobuf:"bytes,4,opt,name=reminder,proto3" json:"reminder,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ToDo) Reset()         { *m = ToDo{} }
func (m *ToDo) String() string { return proto.CompactTextString(m) }
func (*ToDo) ProtoMessage()    {}
func (*ToDo) Descriptor() ([]byte, []int) {
	return fileDescriptor_todo_service_a2620155fbb59383, []int{1}
}
func (m *ToDo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToDo.Unmarshal(m, b)
}
func (m *ToDo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToDo.Marshal(b, m, deterministic)
}
func (dst *ToDo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToDo.Merge(dst, src)
}
func (m *ToDo) XXX_Size() int {
	return xxx_messageInfo_ToDo.Size(m)
}
func (m *ToDo) XXX_DiscardUnknown() {
	xxx_messageInfo_ToDo.DiscardUnknown(m)
}

var xxx_messageInfo_ToDo proto.InternalMessageInfo

func (m *ToDo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ToDo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ToDo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ToDo) GetReminder() *timestamp.Timestamp {
	if m != nil {
		return m.Reminder
	}
	return nil
}

// 包含创建的待办事项任务的数据
type CreateResponse struct {
	// API版本控制：这是明确指定版本的最佳实践
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// 已创建任务的ID
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_todo_service_a2620155fbb59383, []int{2}
}
func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (dst *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(dst, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// 求数据读取待办事项任务
type ReadRequest struct {
	// API版本控制：这是明确指定版本的最佳实践
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// 待办事项任务的唯一整数标识符
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadRequest) Reset()         { *m = ReadRequest{} }
func (m *ReadRequest) String() string { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()    {}
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_todo_service_a2620155fbb59383, []int{3}
}
func (m *ReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadRequest.Unmarshal(m, b)
}
func (m *ReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadRequest.Marshal(b, m, deterministic)
}
func (dst *ReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadRequest.Merge(dst, src)
}
func (m *ReadRequest) XXX_Size() int {
	return xxx_messageInfo_ReadRequest.Size(m)
}
func (m *ReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadRequest proto.InternalMessageInfo

func (m *ReadRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ReadRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// 包含ID请求中指定的待办事项任务数据
type ReadResponse struct {
	// API版本控制：这是明确指定版本的最佳实践
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// 按ID读取的任务实体
	ToDo                 *ToDo    `protobuf:"bytes,2,opt,name=toDo,proto3" json:"toDo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadResponse) Reset()         { *m = ReadResponse{} }
func (m *ReadResponse) String() string { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()    {}
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_todo_service_a2620155fbb59383, []int{4}
}
func (m *ReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadResponse.Unmarshal(m, b)
}
func (m *ReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadResponse.Marshal(b, m, deterministic)
}
func (dst *ReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadResponse.Merge(dst, src)
}
func (m *ReadResponse) XXX_Size() int {
	return xxx_messageInfo_ReadResponse.Size(m)
}
func (m *ReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadResponse proto.InternalMessageInfo

func (m *ReadResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ReadResponse) GetToDo() *ToDo {
	if m != nil {
		return m.ToDo
	}
	return nil
}

// 请求数据以更新待办事项任务
type UpdateRequest struct {
	// API版本控制：这是明确指定版本的最佳实践
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// 要更新的任务实体
	ToDo                 *ToDo    `protobuf:"bytes,2,opt,name=toDo,proto3" json:"toDo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_todo_service_a2620155fbb59383, []int{5}
}
func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(dst, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *UpdateRequest) GetToDo() *ToDo {
	if m != nil {
		return m.ToDo
	}
	return nil
}

// 包含更新操作的状态
type UpdateResponse struct {
	// API版本控制：这是明确指定版本的最佳实践
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// 包含已更新的实体数量
	// 在成功更新的情况下等于1
	Updated              int64    `protobuf:"varint,2,opt,name=updated,proto3" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateResponse) Reset()         { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()    {}
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_todo_service_a2620155fbb59383, []int{6}
}
func (m *UpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResponse.Unmarshal(m, b)
}
func (m *UpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResponse.Merge(dst, src)
}
func (m *UpdateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateResponse.Size(m)
}
func (m *UpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResponse proto.InternalMessageInfo

func (m *UpdateResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *UpdateResponse) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

// 请求数据删除待办事项任务
type DeleteRequest struct {
	// API版本控制：这是明确指定版本的最佳实践
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// 要删除的待办事项任务的唯一整数标识符
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_todo_service_a2620155fbb59383, []int{7}
}
func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(dst, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *DeleteRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// 包含删除操作的状态
type DeleteResponse struct {
	// API版本控制：这是明确指定版本的最佳实践
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// 包含已删除的实体数量
	// 成功删除时等于1
	Deleted              int64    `protobuf:"varint,2,opt,name=deleted,proto3" json:"deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_todo_service_a2620155fbb59383, []int{8}
}
func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(dst, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

func (m *DeleteResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *DeleteResponse) GetDeleted() int64 {
	if m != nil {
		return m.Deleted
	}
	return 0
}

// 请求数据以读取所有待办事项任务
type ReadAllRequest struct {
	// API版本控制：这是明确指定版本的最佳实践
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadAllRequest) Reset()         { *m = ReadAllRequest{} }
func (m *ReadAllRequest) String() string { return proto.CompactTextString(m) }
func (*ReadAllRequest) ProtoMessage()    {}
func (*ReadAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_todo_service_a2620155fbb59383, []int{9}
}
func (m *ReadAllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadAllRequest.Unmarshal(m, b)
}
func (m *ReadAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadAllRequest.Marshal(b, m, deterministic)
}
func (dst *ReadAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadAllRequest.Merge(dst, src)
}
func (m *ReadAllRequest) XXX_Size() int {
	return xxx_messageInfo_ReadAllRequest.Size(m)
}
func (m *ReadAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadAllRequest proto.InternalMessageInfo

func (m *ReadAllRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

// 包含所有待办事项任务的列表
type ReadAllResponse struct {
	// API版本控制：这是明确指定版本的最佳实践
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	ToDos                []*ToDo  `protobuf:"bytes,2,rep,name=toDos,proto3" json:"toDos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadAllResponse) Reset()         { *m = ReadAllResponse{} }
func (m *ReadAllResponse) String() string { return proto.CompactTextString(m) }
func (*ReadAllResponse) ProtoMessage()    {}
func (*ReadAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_todo_service_a2620155fbb59383, []int{10}
}
func (m *ReadAllResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadAllResponse.Unmarshal(m, b)
}
func (m *ReadAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadAllResponse.Marshal(b, m, deterministic)
}
func (dst *ReadAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadAllResponse.Merge(dst, src)
}
func (m *ReadAllResponse) XXX_Size() int {
	return xxx_messageInfo_ReadAllResponse.Size(m)
}
func (m *ReadAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadAllResponse proto.InternalMessageInfo

func (m *ReadAllResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ReadAllResponse) GetToDos() []*ToDo {
	if m != nil {
		return m.ToDos
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateRequest)(nil), "v1.CreateRequest")
	proto.RegisterType((*ToDo)(nil), "v1.ToDo")
	proto.RegisterType((*CreateResponse)(nil), "v1.CreateResponse")
	proto.RegisterType((*ReadRequest)(nil), "v1.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "v1.ReadResponse")
	proto.RegisterType((*UpdateRequest)(nil), "v1.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "v1.UpdateResponse")
	proto.RegisterType((*DeleteRequest)(nil), "v1.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "v1.DeleteResponse")
	proto.RegisterType((*ReadAllRequest)(nil), "v1.ReadAllRequest")
	proto.RegisterType((*ReadAllResponse)(nil), "v1.ReadAllResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ToDoServiceClient is the client API for ToDoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ToDoServiceClient interface {
	// 创建新的待办事项任务
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	// 读取待办事项任务
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error)
	// 更新待办事项任务
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	// 删除待办事项任务
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	// 读取全部待办事项任务
	ReadAll(ctx context.Context, in *ReadAllRequest, opts ...grpc.CallOption) (*ReadAllResponse, error)
}

type toDoServiceClient struct {
	cc *grpc.ClientConn
}

func NewToDoServiceClient(cc *grpc.ClientConn) ToDoServiceClient {
	return &toDoServiceClient{cc}
}

func (c *toDoServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/v1.ToDoService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toDoServiceClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error) {
	out := new(ReadResponse)
	err := c.cc.Invoke(ctx, "/v1.ToDoService/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toDoServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/v1.ToDoService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toDoServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/v1.ToDoService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toDoServiceClient) ReadAll(ctx context.Context, in *ReadAllRequest, opts ...grpc.CallOption) (*ReadAllResponse, error) {
	out := new(ReadAllResponse)
	err := c.cc.Invoke(ctx, "/v1.ToDoService/ReadAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ToDoServiceServer is the server API for ToDoService service.
type ToDoServiceServer interface {
	// 创建新的待办事项任务
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	// 读取待办事项任务
	Read(context.Context, *ReadRequest) (*ReadResponse, error)
	// 更新待办事项任务
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	// 删除待办事项任务
	Delete(context.Context, *DeleteRequest) (*DeleteResponse, error)
	// 读取全部待办事项任务
	ReadAll(context.Context, *ReadAllRequest) (*ReadAllResponse, error)
}

func RegisterToDoServiceServer(s *grpc.Server, srv ToDoServiceServer) {
	s.RegisterService(&_ToDoService_serviceDesc, srv)
}

func _ToDoService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToDoServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ToDoService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToDoServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ToDoService_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToDoServiceServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ToDoService/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToDoServiceServer).Read(ctx, req.(*ReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ToDoService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToDoServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ToDoService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToDoServiceServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ToDoService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToDoServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ToDoService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToDoServiceServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ToDoService_ReadAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToDoServiceServer).ReadAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ToDoService/ReadAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToDoServiceServer).ReadAll(ctx, req.(*ReadAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ToDoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.ToDoService",
	HandlerType: (*ToDoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ToDoService_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _ToDoService_Read_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ToDoService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ToDoService_Delete_Handler,
		},
		{
			MethodName: "ReadAll",
			Handler:    _ToDoService_ReadAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "todo-service.proto",
}

func init() { proto.RegisterFile("todo-service.proto", fileDescriptor_todo_service_a2620155fbb59383) }

var fileDescriptor_todo_service_a2620155fbb59383 = []byte{
	// 695 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x41, 0x4f, 0xdb, 0x4a,
	0x10, 0x96, 0x9d, 0x10, 0x60, 0x42, 0x02, 0x2c, 0x3c, 0xbd, 0xc8, 0x42, 0xef, 0x59, 0x3e, 0xa1,
	0xa8, 0xb6, 0x49, 0x8a, 0x38, 0xa4, 0xa8, 0x40, 0x49, 0xab, 0x9e, 0x5d, 0x7a, 0xe9, 0xcd, 0xb1,
	0x07, 0x67, 0x91, 0xe3, 0x35, 0xeb, 0x4d, 0xa8, 0x54, 0x71, 0xe9, 0xa1, 0xaa, 0xd4, 0x1e, 0xaa,
	0xf6, 0xd6, 0x5b, 0x7f, 0x53, 0xff, 0x42, 0x7f, 0x48, 0xe5, 0x5d, 0x3b, 0x21, 0x40, 0x50, 0xa5,
	0x9e, 0x92, 0x99, 0xfd, 0xbe, 0xf9, 0xbe, 0x99, 0x59, 0x2f, 0x10, 0xc1, 0x42, 0x66, 0x67, 0xc8,
	0x27, 0x34, 0x40, 0x27, 0xe5, 0x4c, 0x30, 0xa2, 0x4f, 0x3a, 0xc6, 0xff, 0x11, 0x63, 0x51, 0x8c,
	0xae, 0xcc, 0x0c, 0xc6, 0xe7, 0xae, 0xa0, 0x23, 0xcc, 0x84, 0x3f, 0x4a, 0x15, 0xc8, 0xd8, 0x29,
	0x00, 0x7e, 0x4a, 0x5d, 0x3f, 0x49, 0x98, 0xf0, 0x05, 0x65, 0x49, 0x56, 0x9c, 0x3e, 0x92, 0x3f,
	0x81, 0x1d, 0x61, 0x62, 0x67, 0x57, 0x7e, 0x14, 0x21, 0x77, 0x59, 0x2a, 0x11, 0x77, 0xd1, 0xd6,
	0x11, 0x34, 0x4e, 0x39, 0xfa, 0x02, 0x3d, 0xbc, 0x1c, 0x63, 0x26, 0xc8, 0x06, 0x54, 0xfc, 0x94,
	0xb6, 0x34, 0x53, 0xdb, 0x5d, 0xf5, 0xf2, 0xbf, 0x64, 0x07, 0xaa, 0x82, 0xf5, 0x59, 0x4b, 0x37,
	0xb5, 0xdd, 0x7a, 0x77, 0xc5, 0x99, 0x74, 0x9c, 0x33, 0xd6, 0x67, 0x9e, 0xcc, 0x5a, 0x1f, 0x34,
	0xa8, 0xe6, 0x21, 0x69, 0x82, 0x4e, 0x43, 0xc9, 0xab, 0x78, 0x3a, 0x0d, 0xc9, 0x36, 0x2c, 0x09,
	0x2a, 0x62, 0x94, 0xbc, 0x55, 0x4f, 0x05, 0xc4, 0x84, 0x7a, 0x88, 0x59, 0xc0, 0xa9, 0x74, 0xd4,
	0xaa, 0xc8, 0xb3, 0x9b, 0x29, 0x72, 0x00, 0x2b, 0x1c, 0x47, 0x34, 0x09, 0x91, 0xb7, 0xaa, 0x52,
	0xd2, 0x70, 0x54, 0xc3, 0x4e, 0x39, 0x11, 0xe7, 0xac, 0x9c, 0x88, 0x37, 0xc5, 0x5a, 0x5d, 0x68,
	0x96, 0x9d, 0x64, 0x29, 0x4b, 0x32, 0xbc, 0xa7, 0x15, 0xe5, 0x51, 0x2f, 0x3d, 0x5a, 0x2e, 0xd4,
	0x3d, 0xf4, 0xc3, 0xc5, 0xbd, 0xdf, 0x26, 0x3c, 0x85, 0x35, 0x45, 0x58, 0x28, 0xf1, 0xf0, 0xb4,
	0x8e, 0xa0, 0xf1, 0x3a, 0x0d, 0xff, 0x62, 0xdc, 0x87, 0xd0, 0x2c, 0x0b, 0x2c, 0xb4, 0xd0, 0x82,
	0xe5, 0xb1, 0xc4, 0x94, 0xce, 0xcb, 0xd0, 0xea, 0x40, 0xa3, 0x8f, 0x31, 0x3e, 0x24, 0x7f, 0xbb,
	0xe3, 0x43, 0x68, 0x96, 0x94, 0x87, 0x04, 0x43, 0x89, 0x99, 0x0a, 0x16, 0xa1, 0x65, 0x41, 0x33,
	0x9f, 0xd7, 0x49, 0x1c, 0x2f, 0x54, 0xb4, 0x4e, 0x61, 0x7d, 0x8a, 0x59, 0x28, 0xf1, 0x1f, 0x2c,
	0xe5, 0xfd, 0x67, 0x2d, 0xdd, 0xac, 0xcc, 0x8d, 0x45, 0xa5, 0xbb, 0x5f, 0x2a, 0x50, 0xcf, 0xe3,
	0x57, 0xea, 0x73, 0x22, 0x7d, 0xa8, 0xa9, 0xdb, 0x40, 0x36, 0x73, 0xe8, 0xdc, 0x1d, 0x37, 0xc8,
	0xcd, 0x94, 0x92, 0xb4, 0xb6, 0xde, 0xff, 0xfc, 0xf5, 0x4d, 0x6f, 0x58, 0x2b, 0xee, 0xa4, 0xe3,
	0xe6, 0x5f, 0x66, 0x4f, 0x6b, 0x93, 0x63, 0xa8, 0xe6, 0xd6, 0xc8, 0x7a, 0x4e, 0xb8, 0x71, 0x53,
	0x8c, 0x8d, 0x59, 0xa2, 0xe0, 0xff, 0x23, 0xf9, 0xeb, 0xa4, 0x51, 0xf2, 0xdd, 0x77, 0x34, 0xbc,
	0x26, 0x11, 0xd4, 0xd4, 0xbe, 0x94, 0x8f, 0xb9, 0xe5, 0x2b, 0x1f, 0xf3, 0xeb, 0xb4, 0x0e, 0x64,
	0x9d, 0x3d, 0x83, 0xcc, 0xea, 0xe4, 0x1d, 0x3a, 0x34, 0xbc, 0xee, 0x69, 0xed, 0x37, 0xff, 0x76,
	0xef, 0x3f, 0x20, 0x2f, 0xa0, 0xa6, 0xf6, 0xa4, 0x84, 0xe6, 0xd6, 0xac, 0x84, 0xe6, 0xd7, 0x58,
	0x1a, 0x6e, 0xdf, 0x32, 0xfc, 0x12, 0x96, 0x8b, 0x6d, 0x10, 0x52, 0x36, 0x39, 0x5b, 0x9f, 0xb1,
	0x35, 0x97, 0x2b, 0x4a, 0x6d, 0xcb, 0x52, 0x4d, 0xb2, 0x36, 0x2d, 0xe5, 0xc7, 0xf1, 0xb3, 0xcf,
	0xfa, 0xd7, 0x93, 0x8f, 0x3a, 0xf9, 0xa1, 0xc1, 0x5a, 0xbe, 0x19, 0xb3, 0x78, 0xe9, 0xac, 0x4f,
	0x1a, 0xb8, 0x11, 0xb3, 0x23, 0x9e, 0x06, 0xf6, 0x50, 0x88, 0xd4, 0xe6, 0x98, 0x09, 0x7b, 0x44,
	0x03, 0xce, 0x0a, 0x88, 0x2d, 0xc6, 0x82, 0x71, 0xea, 0xc7, 0x66, 0xca, 0xd9, 0x05, 0x06, 0x82,
	0x3c, 0xcf, 0x81, 0x59, 0xcf, 0x75, 0x23, 0x2a, 0x86, 0xe3, 0x81, 0x13, 0xb0, 0x91, 0x7b, 0x8e,
	0x49, 0x34, 0x40, 0x1e, 0xd3, 0xe4, 0x4f, 0xcb, 0x19, 0x9b, 0x33, 0xce, 0xf1, 0xe5, 0x65, 0x5e,
	0xa5, 0x5b, 0xe9, 0x38, 0x7b, 0x6d, 0x4d, 0xeb, 0x6e, 0xf8, 0x69, 0x1a, 0xd3, 0x40, 0x3e, 0x8e,
	0xee, 0x45, 0xc6, 0x92, 0xde, 0x9d, 0x8c, 0xf7, 0x04, 0x2a, 0xfb, 0x7b, 0xfb, 0x64, 0x1f, 0xda,
	0x1e, 0x8a, 0x31, 0x4f, 0x30, 0x34, 0xaf, 0x86, 0x98, 0x98, 0x62, 0x88, 0x26, 0xc7, 0x8c, 0x8d,
	0x79, 0x80, 0x66, 0xc8, 0x30, 0x33, 0x13, 0x26, 0x4c, 0x7c, 0x4b, 0x33, 0xe1, 0x90, 0x1a, 0x54,
	0xbf, 0xeb, 0xda, 0xf2, 0xa0, 0x26, 0x5f, 0xaf, 0xc7, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xc8,
	0xee, 0x9a, 0x8a, 0xf7, 0x05, 0x00, 0x00,
}
